name: Terraform Deployment

on: 
  workflow_dispatch: 
  push:
    branches: 
    - main 
    - master
    - tjpalanca/21-Security-Hardening 

jobs:
  deploy:
    name: Deploy Terraform
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout code 
      uses: actions/checkout@v3
    - id: setup-python 
      name: Setup Python 
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - id: setup-poetry 
      name: Setup Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.2.2
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - id: setup-terraform
      name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.7
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - id: terraform-apply 
      name: Terraform Apply 
      run: terraform apply -auto-approve 
    - id: load-cached-virtualenv
      name: Load cached virtualenv
      uses: actions/cache@v3
      with:
        path: .venv
        key: >-
          venv
          ${{ runner.os }}
          ${{ steps.setup-python.outputs.python-version }}
          ${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.load-cached-virtualenv.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Install library
      run: poetry install --no-interaction
    - name: Disable firewall
      env:
        LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
      run: |
        source .venv/bin/activate 
        disable_firewall
    - name: Terraform Apply 

    - name: Re-enable firewall
      if: always()
      env:
        LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
      run: |
        source .venv/bin/activate 
        enable_firewall
